/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package org.xmlportletfactory.olafk.customer.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.xmlportletfactory.olafk.customer.model.Invoices;
import org.xmlportletfactory.olafk.customer.model.InvoicesModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Invoices service. Represents a row in the &quot;customer_Invoices&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.xmlportletfactory.olafk.customer.model.InvoicesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link InvoicesImpl}.
 * </p>
 *
 * @author Jack A. Rider
 * @see InvoicesImpl
 * @see org.xmlportletfactory.olafk.customer.model.Invoices
 * @see org.xmlportletfactory.olafk.customer.model.InvoicesModel
 * @generated
 */
public class InvoicesModelImpl extends BaseModelImpl<Invoices>
	implements InvoicesModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a invoices model instance should use the {@link org.xmlportletfactory.olafk.customer.model.Invoices} interface instead.
	 */
	public static final String TABLE_NAME = "customer_Invoices";
	public static final Object[][] TABLE_COLUMNS = {
			{ "invoiceId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "customerId", Types.BIGINT },
			{ "date_", Types.TIMESTAMP },
			{ "amount", Types.BIGINT },
			{ "paid", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table customer_Invoices (invoiceId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,customerId LONG,date_ DATE null,amount LONG,paid BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table customer_Invoices";
	public static final String ORDER_BY_JPQL = " ORDER BY invoices.invoiceId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY customer_Invoices.invoiceId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.xmlportletfactory.olafk.customer.model.Invoices"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.xmlportletfactory.olafk.customer.model.Invoices"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.xmlportletfactory.olafk.customer.model.Invoices"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long CUSTOMERID_COLUMN_BITMASK = 2L;
	public static long GROUPID_COLUMN_BITMASK = 4L;
	public static long USERID_COLUMN_BITMASK = 8L;
	public static long INVOICEID_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.xmlportletfactory.olafk.customer.model.Invoices"));

	public InvoicesModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _invoiceId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setInvoiceId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _invoiceId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Invoices.class;
	}

	@Override
	public String getModelClassName() {
		return Invoices.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("invoiceId", getInvoiceId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("customerId", getCustomerId());
		attributes.put("date", getDate());
		attributes.put("amount", getAmount());
		attributes.put("paid", getPaid());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long invoiceId = (Long)attributes.get("invoiceId");

		if (invoiceId != null) {
			setInvoiceId(invoiceId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long customerId = (Long)attributes.get("customerId");

		if (customerId != null) {
			setCustomerId(customerId);
		}

		Date date = (Date)attributes.get("date");

		if (date != null) {
			setDate(date);
		}

		Long amount = (Long)attributes.get("amount");

		if (amount != null) {
			setAmount(amount);
		}

		Boolean paid = (Boolean)attributes.get("paid");

		if (paid != null) {
			setPaid(paid);
		}
	}

	@Override
	public long getInvoiceId() {
		return _invoiceId;
	}

	@Override
	public void setInvoiceId(long invoiceId) {
		_invoiceId = invoiceId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getCustomerId() {
		return _customerId;
	}

	@Override
	public void setCustomerId(long customerId) {
		_columnBitmask |= CUSTOMERID_COLUMN_BITMASK;

		if (!_setOriginalCustomerId) {
			_setOriginalCustomerId = true;

			_originalCustomerId = _customerId;
		}

		_customerId = customerId;
	}

	public long getOriginalCustomerId() {
		return _originalCustomerId;
	}

	@Override
	public Date getDate() {
		return _date;
	}

	@Override
	public void setDate(Date date) {
		_date = date;
	}

	@Override
	public long getAmount() {
		return _amount;
	}

	@Override
	public void setAmount(long amount) {
		_amount = amount;
	}

	@Override
	public boolean getPaid() {
		return _paid;
	}

	@Override
	public boolean isPaid() {
		return _paid;
	}

	@Override
	public void setPaid(boolean paid) {
		_paid = paid;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Invoices.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Invoices toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Invoices)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		InvoicesImpl invoicesImpl = new InvoicesImpl();

		invoicesImpl.setInvoiceId(getInvoiceId());
		invoicesImpl.setCompanyId(getCompanyId());
		invoicesImpl.setGroupId(getGroupId());
		invoicesImpl.setUserId(getUserId());
		invoicesImpl.setUserName(getUserName());
		invoicesImpl.setCreateDate(getCreateDate());
		invoicesImpl.setModifiedDate(getModifiedDate());
		invoicesImpl.setCustomerId(getCustomerId());
		invoicesImpl.setDate(getDate());
		invoicesImpl.setAmount(getAmount());
		invoicesImpl.setPaid(getPaid());

		invoicesImpl.resetOriginalValues();

		return invoicesImpl;
	}

	@Override
	public int compareTo(Invoices invoices) {
		long primaryKey = invoices.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Invoices)) {
			return false;
		}

		Invoices invoices = (Invoices)obj;

		long primaryKey = invoices.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		InvoicesModelImpl invoicesModelImpl = this;

		invoicesModelImpl._originalCompanyId = invoicesModelImpl._companyId;

		invoicesModelImpl._setOriginalCompanyId = false;

		invoicesModelImpl._originalGroupId = invoicesModelImpl._groupId;

		invoicesModelImpl._setOriginalGroupId = false;

		invoicesModelImpl._originalUserId = invoicesModelImpl._userId;

		invoicesModelImpl._setOriginalUserId = false;

		invoicesModelImpl._originalCustomerId = invoicesModelImpl._customerId;

		invoicesModelImpl._setOriginalCustomerId = false;

		invoicesModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Invoices> toCacheModel() {
		InvoicesCacheModel invoicesCacheModel = new InvoicesCacheModel();

		invoicesCacheModel.invoiceId = getInvoiceId();

		invoicesCacheModel.companyId = getCompanyId();

		invoicesCacheModel.groupId = getGroupId();

		invoicesCacheModel.userId = getUserId();

		invoicesCacheModel.userName = getUserName();

		String userName = invoicesCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			invoicesCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			invoicesCacheModel.createDate = createDate.getTime();
		}
		else {
			invoicesCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			invoicesCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			invoicesCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		invoicesCacheModel.customerId = getCustomerId();

		Date date = getDate();

		if (date != null) {
			invoicesCacheModel.date = date.getTime();
		}
		else {
			invoicesCacheModel.date = Long.MIN_VALUE;
		}

		invoicesCacheModel.amount = getAmount();

		invoicesCacheModel.paid = getPaid();

		return invoicesCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{invoiceId=");
		sb.append(getInvoiceId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", customerId=");
		sb.append(getCustomerId());
		sb.append(", date=");
		sb.append(getDate());
		sb.append(", amount=");
		sb.append(getAmount());
		sb.append(", paid=");
		sb.append(getPaid());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("org.xmlportletfactory.olafk.customer.model.Invoices");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>invoiceId</column-name><column-value><![CDATA[");
		sb.append(getInvoiceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerId</column-name><column-value><![CDATA[");
		sb.append(getCustomerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>date</column-name><column-value><![CDATA[");
		sb.append(getDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>amount</column-name><column-value><![CDATA[");
		sb.append(getAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paid</column-name><column-value><![CDATA[");
		sb.append(getPaid());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Invoices.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Invoices.class
		};
	private long _invoiceId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _customerId;
	private long _originalCustomerId;
	private boolean _setOriginalCustomerId;
	private Date _date;
	private long _amount;
	private boolean _paid;
	private long _columnBitmask;
	private Invoices _escapedModel;
}